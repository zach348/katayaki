var gmap;

function buildMap(origin, options){
  origin = origin || { coords: { latitude: 4, longitude: 5 }};
  options = options || { zoom: 12, fetchMarkersOnResize: true, originMarker: true };

  gmap = new google.maps.Map(document.getElementById('map'), {
    center: { lat: origin.coords.latitude, lng: origin.coords.longitude },
    zoom: options.zoom
  });

  if(options.fetchMarkersOnResize){
    google.maps.event.addListener(gmap, 'idle', function(){
      getAspirationsWithinBounds(addMarkersForAspirations);
    })
  }
  if(options.originMarker){
    gmap.markers = gmap.markers || [];
    var marker = new google.maps.Marker({
      position: {lat: origin.coords.latitude, lng: origin.coords.longitude},
      map: gmap
    });
    gmap.markers.push({ marker: marker, infowindow: null })
  }
  if(options.timer){
    clearTimeout(options.timer);
  }
}

function getCurrentUserPosition(callback, options){
  $.ajax({
    method: 'GET',
    url: '/location.json',
    contentType: 'application/json',
    success: function(data) {
      callback(data, options);
    }
  });
}

function getAspirationsWithinBounds(callback, options){
  var swBound = [ gmap.getBounds().getSouthWest().lat(),
                  gmap.getBounds().getSouthWest().lng() ]
  var neBound = [ gmap.getBounds().getNorthEast().lat(),
                  gmap.getBounds().getNorthEast().lng() ]
  var app = this;

  $.ajax({
    method: 'GET',
    url: '/markers.json',
    contentType: 'application/json',
    data: { bounds: {
                      SW: swBound,
                      NE: neBound
                    }
          },
    success: function(aspirations) {
      callback(aspirations, options);
    }
  });
}



function addMarkersForAspirations(aspirations, options) {
  options = options || {};
  gmap.markers = gmap.markers || [];
  aspirations.markers.forEach(function(aspiration){
    if(userMarkerExists(aspiration.usrId)){
      var marker = new google.maps.Marker({
          map: gmap,
          usrId: aspiration.usrId,
          animation: google.maps.Animation.DROP,
          position: { lat: aspiration.lat, lng: aspiration.lng },
          icon: "https://maps.google.com/mapfiles/ms/icons/blue-dot.png"
      });
      var infowindow = new google.maps.InfoWindow({
        content: `<img class="marker-img" src=<%= asset_path('avatar.png') %>/>`+
                 `<h5 class="infowindow-heading">${aspiration.title}</h5>`+
                 `<p class="infowindow-body">${aspiration.details}</p>`
      });
      marker.addListener('click', function(){
        infowindow.open(gmap, marker);
      });
      gmap.markers.push({ marker: marker, infowindow: infowindow })
    }
  })
}

function openInfoBoxes(){
  gmap.markers.forEach(function(marker){
    marker.infowindow.open(gmap, marker.marker )
  })
}

function clearMarkers(){
  gmap.markers.forEach(function(marker){
    marker.marker.setMap(null);
  })
}

function userMarkerExists(userId){
  return gmap.markers.filter(function(marker){ return marker.marker.usrId == userId }).length == 0
}
